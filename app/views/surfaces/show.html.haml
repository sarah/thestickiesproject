-content_for :surface_header do
  #surface_header
    %h1
      =@surface.name
      -url = @surface.user ? edit_user_surface_path(@surface.user, @surface) : edit_surface_path(@surface)
      =link_to 'edit', url
      =link_to 'claim', claim_surface_url(@surface), {:method => :put} if signed_in? and @surface.user.nil?
    #new_surface_form
      =render 'new', :surface => Surface.new

-content_for :new_sticky do
  %input{:type => 'button', :value => 'New Sticky', :id => 'new_sticky_button'}
    
#stickies{'data-create-sticky-url' => surface_stickies_url(@surface)}
      
%script
  var create_sticky_dom_element = TSP.get().builders.create_sticky_dom_element;
  var sticky_params;

  -@stickies.sort{|a,b|a.id <=> b.id}.each do |sticky|
    ==sticky_params = {id:#{sticky.id}, left:#{sticky.left}, top:#{sticky.top}, content:'#{h sticky.content}', delete_url: '#{surface_sticky_url(@surface, sticky)}', update_url:'#{surface_sticky_url(@surface, sticky)}'};

    create_sticky_dom_element(sticky_params).place_on('#stickies');

=javascript_include_tag "stickies"
